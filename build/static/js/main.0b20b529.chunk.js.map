{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","view/login.jsx","view/resume/resume.jsx","index.js"],"names":["module","exports","React","Component","Boolean","window","location","hostname","match","Login","state","ueserName","password","handleSubmit","e","preventDefault","headers","Headers","append","props","form","validateFields","err","values","param","username","axios","post","then","res","data","code","message","info","msg","register","switchShowBox","getFieldDecorator","this","className","onSubmit","Item","rules","required","prefix","type","style","color","placeholder","allowClear","valuePropName","initialValue","href","htmlType","onClick","bind","Resume","Form","create","name","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,uOCSzBC,IAAMC,UCGJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yECbAC,G,kNACFC,MAAQ,CACJC,UAAU,GACVC,SAAS,I,EAEbC,aAAe,SAAAC,GACXA,EAAEC,iBAKF,IAAIC,EAAU,IAAIC,QAClBD,EAAQE,OAAO,eAAgB,qCAC/B,EAAKC,MAAMC,KAAKC,gBAAe,SAACC,EAAKC,GACjC,IAAKD,EAAK,CACN,IAAIE,EAAQ,YAAcD,EAAOE,SAAW,aAAeF,EAAOE,SAClEC,IAAMC,KAAK,aAAaH,EAAO,CAC3BR,QAASA,IACVY,MAAK,SAAUC,GACO,OAAjBA,EAAIC,KAAKC,MACTC,IAAQC,KAAKJ,EAAIC,KAAKI,a,EAM1CC,SAAW,WACP,EAAKhB,MAAMiB,iB,wEAGL,IACEC,EAAsBC,KAAKnB,MAAMC,KAAjCiB,kBACR,OACI,yBAAKE,UAAU,SACX,wBAAIA,UAAU,SAAd,kCACA,kBAAC,IAAD,CAAMC,SAAUF,KAAKzB,aAAc0B,UAAU,cACzC,kBAAC,IAAKE,KAAN,KACKJ,EAAkB,WAAY,CAC3BK,MAAO,CAAC,CAAEC,UAAU,EAAMX,QAAS,oCADtCK,CAGG,kBAAC,IAAD,CACIO,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,eACZC,YAAU,MAItB,kBAAC,IAAKR,KAAN,KACKJ,EAAkB,WAAY,CAC3BK,MAAO,CAAC,CAAEC,UAAU,EAAMX,QAAS,oCADtCK,CAGG,kBAAC,IAAD,CACIO,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,WACLG,YAAY,eACZC,YAAU,MAItB,kBAAC,IAAKR,KAAN,KACKJ,EAAkB,WAAY,CAC3Ba,cAAe,UACfC,cAAc,GAFjBd,CAGE,kBAAC,IAAD,CAAUE,UAAU,YAApB,6BACH,uBAAGA,UAAU,oBAAoBa,KAAK,IAAtC,4BACA,kBAAC,IAAD,CAAQP,KAAK,UAAUQ,SAAS,SAASd,UAAU,qBAAnD,gBACA,0BAAMA,UAAU,cAAce,QAAShB,KAAKH,SAASoB,KAAKjB,OAA1D,uB,GAlEJnC,cC8ELqD,GDHgBC,IAAKC,OAAO,CAAEC,KAAM,gBAApBF,CAAsChD,G,mBC5EjE,WAAYU,GAAQ,IAAD,8BACf,4CAAMA,KACDT,MAAQ,GAFE,E,sEASf,OACI,yBAAK6B,UAAU,OAEX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,QAAhB,sBAAiC,0BAAMA,UAAU,YAAhB,8CAArE,KACA,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,OAAhB,mBAA4C,0BAAMA,UAAU,SAAhB,kCAChF,uBAAGA,UAAU,eAAc,0BAAMA,UAAU,UAAhB,6BAC3B,6BACA,yBAAKA,UAAU,eACX,uBAAGA,UAAU,UACT,6DACA,wFACA,wFACA,yFAEJ,gDACI,wSAGR,uBAAGA,UAAU,eAAc,0BAAMA,UAAU,UAAhB,6BAC3B,6BACA,wBAAIA,UAAU,eACV,4HACA,0FACA,gIACA,uIACA,oIACA,2IAEJ,uBAAGA,UAAU,eAAc,0BAAMA,UAAU,UAAhB,6BAC3B,6BACA,wBAAIA,UAAU,eACV,4BACI,4FACA,uYACA,0XAEJ,4BACI,oDACA,wrBAGA,+OAEJ,4BACI,iGACA,0bACA,4IAEJ,4BACI,yEACA,+mBAGA,qNAGR,uBAAGA,UAAU,eAAc,0BAAMA,UAAU,UAAhB,6BAC3B,6BACA,yBAAKA,UAAU,eACX,uBAAGA,UAAU,YACT,0BAAMA,UAAU,QAAhB,4CACA,0BAAMA,UAAU,eAAhB,6E,GAvEHpC,cCUrByD,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,SHoH7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,MAAK,SAAAuC,GACjCA,EAAaC,kB","file":"static/js/main.0b20b529.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n * @LastEditTime: 2019-09-18 15:00:45\n * @LastEditors: litianfu\n */\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n            name: props.name,\n            isGoing: true,\n            numberOfGuests: 2,\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n    }\n    \n    componentDidMount() { \n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n    activateLasers() { \n        console.log('被点击了')\n    }\n    handleChange(event) { \n        console.log(event.target.name);\n        this.setState({\n            value: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        console.log('提交的名字: ' + this.state.value);\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div>\n                <h1>Hello, world!</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        名字:\n                        <input type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleChange}/>\n                    </label>\n                    <label>\n                        参与:\n                        <input\n                            name=\"isGoing\"\n                            type=\"checkbox\"\n                            checked={this.state.isGoing}\n                            onChange={this.handleInputChange} />\n                        </label>\n                        <br />\n                    <label>\n                        来宾人数:\n                        <input\n                            name=\"numberOfGuests\"\n                            type=\"number\"\n                            value={this.state.numberOfGuests}\n                            onChange={this.handleInputChange} />\n                    </label>\n                    <input type=\"submit\" value=\"提交\" />\n                </form>\n                <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n                <h1>{this.state.name}</h1>\n                <button onClick={this.activateLasers}>\n                点击试试\n                </button>\n            </div>\n            \n        );\n    }\n}\n// function App(props) {\n//   return (\n//     <div className=\"App\">\n//           <header className=\"App-header\">\n//               哈哈哈\n//               <h1>{props.name}</h1>\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a> */}\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Form, Icon, Input, Button, message, Checkbox } from 'antd';\r\nimport axios from 'axios'\r\nimport React, { Component } from \"react\";\r\nimport \"./login.css\";\r\n// import \"../libs/bounce\";\r\nclass Login extends Component {\r\n    state = {\r\n        ueserName:'',\r\n        password:'',\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // axios.get('https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo').then(res => {\r\n        //     console.log(res);\r\n        // })\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                var param = 'username=' + values.username + '&password=' + values.username;\r\n                axios.post('/api/login',param, {\r\n                    headers: headers\r\n                }).then(function (res) {\r\n                    if (res.data.code == '200') { \r\n                        message.info(res.data.msg);\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    };\r\n    register = () => {\r\n        this.props.switchShowBox()\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"login\">\r\n                <h3 className='title'>管理员登录</h3>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: '请输入账号' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"账号\"\r\n                                allowClear\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: '请输入密码' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                                allowClear\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox className=\"remember\">记住密码</Checkbox>)}\r\n                        <a className=\"login-form-forgot\" href=\"\">找回密码</a>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\r\n                        <span className='registerBtn' onClick={this.register.bind(this)}>注册</span>\r\n                    </Form.Item>\r\n                </Form>                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\r\n\r\nexport default WrappedNormalLoginForm","import React, { Component } from \"react\";\r\nimport \"./resume.css\";\r\n// import \"../../libs/bounce\";\r\nclass Resume extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                {/* <p className=\"tit\">简历</p> */}\r\n                <p className=\"information clearfix\"><span className=\"name\">李天福</span><span className=\"position\">前端开发工程师</span> </p>\r\n                <p className=\"information clearfix\"><span className=\"tel\">TEL:18223070173</span><span className=\"email\">E-Mail：1182930079@qq.com</span></p>\r\n                <p className=\"information\"><span className=\"module\">教育背景</span></p>\r\n                <hr />\r\n                <div className=\"information\">\r\n                    <p className=\"school\">\r\n                        <span>时间：2015~2019</span>\r\n                        <span>学校：重庆邮电大学</span>\r\n                        <span>学院：软件工程学院</span>\r\n                        <span>专业：软件工程专业</span>\r\n                    </p>\r\n                    <p>主修：\r\n                        <span>C++程序设计，java 平台程序设计，计算机网络，操作系统，数据库，软件工程，数字媒体设计与开发等</span>\r\n                    </p>\r\n                </div>\r\n                <p className=\"information\"><span className=\"module\">个人能力</span></p>\r\n                <hr />\r\n                <ul className=\"information\">\r\n                    <li>熟悉 web 标准 HTML CSS JavaScript 等前端基础知识</li>\r\n                    <li>熟悉 HTML5 CSS3 jQuery Bootstrap Layui等库</li>\r\n                    <li>熟悉 AJAX，JSON 前后端交互，JavaWeb 开发流程</li>\r\n                    <li>熟悉 VUE全家桶开发，熟练使用iview和element-ui库</li>\r\n                    <li>熟悉 微信小程序开发，熟练使用mpvue和vant</li>\r\n                    <li>熟练使用 github 代码协同工具，webpack 打包工具</li>\r\n                </ul>\r\n                <p className=\"information\"><span className=\"module\">项目经历</span></p>\r\n                <hr />\r\n                <ol className=\"information\">\r\n                    <li>\r\n                        <p>树洞-你的心情驿站网：</p>\r\n                        <p>负责模块：前端登录，注册以及首页界面等，使用 ajax 对数据进行请求，实现响应式布局。项目主要是一个可以匿名分享自己秘密的地方。</p>\r\n                        <p>收获：该项目是大三在校学生团队开发，开发使用了 js,jq,canvas,ajax，bootstrap，对前端框架的使用有了进一步理解，以及对javaweb开发流程的了解。</p>\r\n                    </li>                    \r\n                    <li>\r\n                        <p>途强2.0：</p>\r\n                        <p>负责模块：参与该项目的统计报表模块的开发，项目使用VUE全家桶和iview库进行开发，从原型了解项目需求，通过ui设计实现界面，和后台联调接口，自测整个开发过程。\r\n                            统计报表模块分运动统计，告警统计等。项目是对公司的途强硬件设备进行统一管理。\r\n                        </p>\r\n                        <p>收获：第一次在公司参与团队项目，熟悉公司开发流程，熟悉了vue模块化开发。</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>重庆几米内部管理系统：</p>\r\n                        <p>负责模块：负责机型管理模块和电量电压模板的开发，项目使用VUE模块化开发。该项目是公司内部的项目管理系统，主要是对公司产品以及平台的统一管理。</p>\r\n                        <p>收获：熟悉了VUE全家桶开发，了解了WebSocket。</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>几米挪车定位：</p>\r\n                        <p>负责模块：项目为微信小程序，使用mpvue和vant库开发，一个人负责前端开发和后台联调接口并成功上线。该项目主要功能是扫描二维码通过虚拟号码打电话联系车主\r\n                            ，以及通过硬件设备返回数据查看自己车子的轨迹以及定位功能\r\n                        </p>\r\n                        <p>收获：第一次接触微信小程序开发，熟悉了微信小程序的开发流程。</p>\r\n                    </li>\r\n                </ol>\r\n                <p className=\"information\"><span className=\"module\">职场经历</span></p>\r\n                <hr />\r\n                <div className=\"information\">\r\n                    <p className=\"clearfix\">\r\n                        <span className=\"time\">2018-11-12———至今</span>\r\n                        <span className=\"corporation\">深圳市几米物联有限公司</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Resume","/*\n * @LastEditTime: 2019-09-18 13:46:27\n * @LastEditors: litianfu\n */\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WrappedNormalLoginForm from './view/login';\nimport Resume from './view/resume/resume';\n// ReactDOM.render(<App name=\"Sara\"/>, document.getElementById('root'));\nReactDOM.render(<Resume/>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}